<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article class="whitepaper">
  <title>LMC installation</title>

  <articleinfo>

    <author>
      <firstname>Cédric</firstname>

      <surname>Delfosse</surname>

      <email>cedric.delfosse@linbox.com</email>
    </author>

    <affiliation>
      <orgname>Linbox / Free &amp; ALter Soft</orgname>

      <address>152 rue de Grigy - Metz F-57230</address>
    </affiliation>

    <copyright>
      <year>2007 Cédric Delfosse - Linbox F&amp;AS</year>
    </copyright>

    <legalnotice>
      <para></para>
    </legalnotice>

    <revhistory>      
      <revision>
        <revnumber>$Revision: 12 $</revnumber>
        <date>$Date: 2006-08-04 18:32:51 +0200 (ven, 04 aoû 2006) $</date>
        <authorinitials>$Author: cedric $</authorinitials>
      </revision>
    </revhistory>

    <abstract>
      <para>How to install the LMC (Linbox Management Console) on a Linux distribution</para>
    </abstract>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>
      The LMC (Linbox Management Console) is made of two parts:
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  An agent running on the machine to manage. We call it « LMC agent ».
	  The agent exports to the network several plugins that allow to manage the machine.
	  Of course, there can be multiple agents running on the network.
	  The agent and its plugins are written in Python.
	</para>
      </listitem>
      <listitem>
	<para>
	  A web interface, that talks to the agent(s) using XML-RPC.
	  The interface is written in PHP4, and use the scriptaculous framework to feature an AJAX experience.
	</para>
      </listitem>
    </itemizedlist>

    <para>
      In this document, we will first explain how to install and configure the LMC agent and its plugins, and then how to install the web interface.
    </para>
    <para>
      These installations instructions are generic: this means they should work on most Linux Distribution.
    </para>

  </section>

  <section>

    <title>Debian users are lucky</title>

    <para>
      ... because LMC debian packages are available.
    </para>

    <para>
      For Debian Sarge, add this in your sources.list:
    </para>

    <screen>
      deb ftp://lds.linbox.org/pub/lds/debian sarge main
    </screen>

    <para>
      For Debian Etch:
    </para>

    <screen>
      deb ftp://lds.linbox.org/pub/lds/debian etch main
    </screen>

    <para>
      Here are the Debian packages naming conventions:
      <itemizedlist>
	<listitem>
	  <para>
	    lmc-agent: the LMC agent package
	  </para>
	</listitem>
	<listitem>
	  <para>
	    python-lmc-plugins-tools: helpers for some plugin 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    python-lmc-PLUGIN: LMC agent plugin
	  </para>
	</listitem>
	<listitem>
	  <para>
	    lmc-web-PLUGIN: web interface plugin
	  </para>
	</listitem>
      </itemizedlist>
    </para>

    <note>
      
      <title>Sample configuration files</title>
      
      <para>
	All LMC related sample configuration files are available in the python-lmc-base package, in directory <filename>/usr/share/doc/python-lmc-base/contrib/</filename>.
	You will find there OpenLDAP, SAMBA and Postfix configuration files.
      </para>
      
    </note>
    
  </section>

  <section>
    
    <title>LDAP server configuration</title>

    <para>
      Since version 1.1.2, the LMC supports both OpenLDAP and Fedora Directory Server.
    </para>
    
    <para>
      One LDAP schema called LMC schema is mandatory.
      This schema and others are available in the lmc-agent tarball, in the directory <filename>contrib/ldap/</filename>.
    </para>

    <section>

      <title>OpenLDAP configuration</title>

      <note>
	<title>OpenLDAP example configuration</title>
	<para>
	  You will find an example of OpenLDAP configuration in the directory <filename>contrib/ldap/</filename> of the lmc-agent tarball.
	</para>
      </note>

      <note>
	<title>Already existing directory</title>
	<para>
	  If you already have an OpenLDAP directory, all you need to do is to include the lmc.schema file.
	</para>
      </note>

      <note>
	<title>Debian based distribution</title>
	<para>
	  When installing the slapd package, debconf allows you to configure the root DN of your LDAP directory, set the LDAP manager password and populate the directory.
	</para>
	<para>
	  So you only need to include the lmc.schema in slapd configuration and you are done.
	</para>
      </note>

      <para>
	Get the file <filename>lmc.schema</filename> from the lmc-agent tarball, and copy it to <filename>/etc/openldap/schema/</filename> (or maybe <filename>/etc/ldap/schema/</filename>).
      </para>
      <para>
	Include this schema in the OpenLDAP configuration, in <filename>/etc/ldap/slapd.conf</filename> (or maybe <filename>/etc/openldap/slapd.conf</filename>):
      </para>
      
      <screen>
	include /etc/openldap/schema/lmc.schema
      </screen>

      <para>
	In the OpenLDAP configuration file, we also define the LDAP DN suffix, the LDAP manager (rootdn) and its password (rootpw):
      </para>

      <screen>
	suffix          "dc=linbox,dc=com"
	rootdn          "cn=admin,dc=linbox,dc=com"
	rootpw          {SSHA}gqNR92aL44vUg8aoQ9wcZYzvUxMqU6/8
      </screen>
      
      <para>
	The SSHA password is computed using the slappasswd command:
      </para>

      <screen>
	# slappasswd -s LiNBoX
	{SSHA}gqNR92aL44vUg8aoQ9wcZYzvUxMqU6/8
      </screen>

      <para>
	Once the OpenLDAP server is configured, the base LDAP directory architecture must be created. Create a file called <filename>/tmp/ldap-init.ldif</filename> containing:
      </para>
      
      <screen>
	dn: dc=linbox,dc=com
	objectClass: top
	objectClass: dcObject
	objectClass: organization
	dc: linbox
	o: linbox
	
	dn: cn=admin,dc=linbox,dc=com
	objectClass: simpleSecurityObject
	objectClass: organizationalRole
	cn: admin
	description: LDAP Administrator
	userPassword: gqNR92aL44vUg8aoQ9wcZYzvUxMqU6/8	
      </screen>

      <para>
	The userPassword field must be filled with the output of the slappasswd command. Now we inject the LDIF file into the directory:
      </para>

      <screen>
	# /etc/init.d/ldap stop
	# slapadd -l /tmp/ldap-init.ldif
	# /etc/init.d/ldap start
      </screen>
      
      <note>
	<title>LDAP suffix</title>
	<para>
	  In this example, the LDAP suffix is dc=linbox,dc=com. Of course, you can choose another suffix.
	</para>
      </note>

    </section>

    <section>

      <title>Fedora Directory Server configuration</title>
      
      <para>
	This section need to be updated.
      </para>
      <para>
	Install FDS according to the FDS documentation.
      </para>
      <para>
	The LDAP schemas we prodide must be converted and then imported into FDS.
      </para>	

    </section>
    
  </section>

  <section>

    <title>LMC agent and plugins installation and configuration</title>
   
    <section>
      
      <title>Pre-requisite for installation</title>

      <para>
	This part is written in Python, and use lots of third party tools.
      </para>

      <para>
	In this table, we give the needed packages for each distribution and each LMC components.
      </para>
      <para>
	If you have informations for other distributions, you're welcome :)
      </para>

      <informaltable>
	<tgroup cols="7" align="left" colsep="1" rowsep="1">
	  <colspec colnum="1" colname="col1" />
	  <colspec colnum="2" colname="col2" />
	  <colspec colnum="3" colname="col3" />
	  <colspec colnum="4" colname="col4" />
	  <colspec colnum="5" colname="col5" />
	  <colspec colnum="6" colname="col6" />
	  <colspec colnum="7" colname="col7" />	  
	  <thead>
	    <row>
	      <entry>Vendor / LMC component</entry>
	      <entry>LMC agent</entry>
	      <entry>Python base plugin</entry>
	      <entry>Python samba plugin</entry>
	      <entry>Python mail plugin</entry>
	      <entry>Python ox plugin</entry>
	      <entry>Python proxy plugin</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>Mandriva 2006</entry>
	      <entry>python-twisted</entry>
	      <entry>python-ldap pylibacl</entry>
	      <entry>samba</entry>
	      <entry></entry>
	      <entry>python-psycopg</entry>
	      <entry>squid squidguard</entry>
	    </row>	    
	    <row>
	      <entry>CentOS 4.3</entry>
	      <entry>python-twisted</entry>
	      <entry>python-ldap python-libacl</entry>
	      <entry>samba</entry>
	      <entry></entry>
	      <entry>python-psycopg postgresql-python</entry>
	      <entry>squid squidguard</entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <note>
	<title>CentOS DAG repository</title>
	<para>
	  For some package, you will need to add the DAG repository to yum. Create a file named <filename>/etc/yum.repos.d/DAG.repo</filename> containing:
	</para>
	<screen>
	  # DAG Repository for RedHat Enterprise 4 / CentOS 4
	  [dag]
	  name=DAG Repository
	  baseurl = http://apt.sw.be/redhat/el$releasever/en/$basearch/dag
	  gpgkey=http://dag.wieers.com/packages/RPM-GPG-KEY.dag.txt
	  gpgcheck=1
	  enabled=0
	</screen>
      </note>

    </section>

    <section>

      <title>Installation from source tarball</title>

      <para>
	Get the current lmc-agent tarball at this URL: ftp://lds.linbox.org/pub/lds/sources/current/
      </para>
      
      <screen>
	# tar xzf lmc-agent-x.y.z.tar.gz
	# cd lmc-agent-x.y.z
	# make install
      </screen>

      <para>
	The last command starts the installation: the LMC agent and all its plugins are byte-compiled and installed.
      </para>
      <para>
	The default $PREFIX for installation is <filename>/usr/local</filename>. Here are how the files are installed:
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    <filename>$PREFIX/sbin/lmc-agent</filename>: the LMC agent
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <filename>$PREFIX/lib/lmc/</filename>: helpers for some LMC plugins
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <filename>/etc/lmc/</filename>: all LMC configuration files. There files are sample files you will need to edit.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <filename>/etc/init.d/lmc-agent</filename>: LMC agent init script
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <filename>$PREFIX/lib/pythonX.Y/site-packages/lmc</filename>: LMC Python libraries and plugins.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <filename>$PREFIX/lib/pythonX.Y/site-packages/lmc/plugins/</filename>: LMC Python plugins
	  </para>
	</listitem>
      </itemizedlist>

    </section>
    
    <section>

      <title>LMC agent and Python plugins inter-dependencies</title>

      <para>
	When the LMC agent starts, it looks for all the installed plugins, and tries to activate them.
	Each plugin has a self-test function to check if it can be activated or not. For example, if the « base » plugin can't contact the LDAP, it won't be activated. It the SAMBA schema is not available in the LDAP, the « samba » plugin won't start.
      </para>
      <para>	
	The LMC agent always tries to enable the plugin « base » first. The LMC agent won't start if the plugin « base » can't be activated.
      </para>

    </section>

    <section>

      <title>LMC agent configuration</title>

      <para>
	You can find a full description of the LMC agent configuration file <ulink url="http://lds.linbox.org/content/LMC/conf/en/lmc-agent-configuration-file.html">there</ulink>.
      </para>
      <para>
	With the default configuration file we provide (<filename>/etc/lmc/agent/config.ini</filename>), the LMC agent listen locally to incoming XMLRPC over HTTPS connections on port 7080.
      </para>

    </section>
    
    <section>

      <title>LMC « base » plugin configuration</title>

      <para>
 	You can find a full description of the LMC base plugin configuration file <ulink url="http://lds.linbox.org/content/LMC/conf/en/lmc-python-plugin-base-configuration.html">there</ulink>.
      </para>
      <para>
	The main part of the configuration (<filename>/etc/lmc/plugins/base.ini</filename>) is to set the LDAP server to connect to, and the credentials to use to write into the LDAP.
      </para>
      <para>
	The « defaultUserGroup » option must be set to an existing group in the LDAP.
	You will have to create it using the LMC web interface if this group does not exist.
      </para>

    </section>

    <section>

      <title>LMC « SAMBA » plugin configuration</title>

      <para>
	You can find a full description of the LMC SAMBA plugin configuration file <ulink url="http://lds.linbox.org/content/LMC/conf/en/lmc-python-plugin-samba-configuration.html">there</ulink>.
      </para>
      <para>
	You shouldn't need to edit the configuration file (<filename>/etc/lmc/plugins/samba.ini</filename>).
	This plugin won't be activated if your LDAP directory does not include the SAMBA schema, and well-known RIDs. See the section <xref linkend="LDS_SAMBA" />.
      </para>
      <para>
	ACLs must be enabled on your filesystem. The SAMBA plugin needs them to set the ACLs when creating shares, and SAMBA will be able to map NTFS ACLs to the POSIX ACLs.
      </para>
      <para>
	If you use XFS, ACLs are enabled by default. For ext3, you need to enable ACLs in <filename>/etc/fstab</filename>.
      </para>

    </section>
    
    <section>

      <title>LMC « mail » plugin configuration</title>

      <para>
	You can find a full description of the LMC mail plugin configuration file <ulink url="http://lds.linbox.org/content/LMC/conf/en/lmc-python-plugin-mail-configuration.html">there</ulink>.
      </para>
      <para>
	This plugin won't be activated if your LDAP directory does not include a special mail schema. See the section <xref linkend="LDS_MAIL" />.
      </para>

    </section>

    <section>

      <title>Using LMC agent</title>

      <para>
	To start and stop the LMC agent, use the <filename>/etc/init.d/lmc-agent</filename> script:
      </para>
      <screen>
	# /etc/init.d/lmc-agent stop
	# /etc/init.d/lmc-agent start
      </screen>

      <para>
	The LMC agent must be started to use the LMC web interface.
      </para>

      <para>
	When the LMC agent is started, all startup log messages are written to stderr and <filename>/var/log/lmc/lmc-agent.log</filename>.
      </para>

      <para>
	Here is what is written (for example) if there is no error:
      </para>
      
      <screen>
	# /etc/init.d/lmc-agent start
	Starting Linbox Management Console XML-RPC Agent: lmc-agent starting...
	Plugin base loaded, API version: 4:0:0 build(82)
	Plugin mail loaded, API version: 3:0:1 build(78)
	Plugin samba loaded, API version: 3:0:2 build(78)
	Plugin proxy loaded, API version: 1:0:0 build(78)
	Daemon PID 13943
	done.
      </screen>

      <para>
	If there is an error:
      </para>
      
      <screen>
	# /etc/init.d/lmc-agent start
	Starting Linbox Management Console XML-RPC Agent: lmc-agent starting...
	Can't bind to LDAP: invalid credentials.
	Plugin base not loaded.
	LMC agent can't run without the base plugin. Exiting.
	failed.
      </screen>

      <para>
	The base plugin can't bind to LDAP, because the credentials we used to connect to the LDAP server are wrong.
	As the base plugin must be activated to use the LMC agent, the LMC agent exits.
      </para>

      <screen>
	# /etc/init.d/lmc-agent start
	Starting Linbox Management Console XML-RPC Agent: lmc-agent starting...
	Plugin base loaded, API version: 4:0:0 build(82)
	Plugin mail loaded, API version: 3:0:1 build(78)
	Samba schema are not included in LDAP directory
	Plugin samba not loaded.
	Plugin proxy loaded, API version: 1:0:0 build(78)
	Daemon PID 14010
	done.	
      </screen>
      
      <para>
	In this example, the SAMBA schema has not been detected in the LDAP directory, so the SAMBA plugin is not started.
	But this plugin is not mandatory, so the LMC agent doesn't exit.
      </para>

    </section>

    <section>

      <title>How to disable a plugin</title>

      <para>
	In the .ini file corresponding to the plugin, set « disable = 1 » in the main section.
      </para>

    </section>
    
  </section>

  <section>

    <title>LMC web interface installation</title>
   
    <section>

      <title>Prerequisite</title>
      
      <para>
	The LMC web interface is written in PHP4. Basically, you just need to install an Apache2 server with PHP4 (or PHP5) support.
      </para>
      <para>
	The XML-RPC module of PHP is needed too.
      </para>

    </section>

    <section>

      <title>Description of all the LMC web modules</title>

      <para>
	The lmc-web-base package contains:
      </para>
      <itemizedlist>
	<listitem>
	  <para>the base infrastructure used by all the others LMC web modules</para>
	</listitem>
	<listitem>
	  <para>the LMC login page</para>
	</listitem>
	<listitem>
	  <para>the users and groups management pages</para>
	</listitem>
      </itemizedlist>
      
      <para>
	The others LMC web modules available are:
      </para>

      <itemizedlist>
	<listitem>
	  <para>lmc-web-samba: SAMBA users, groups and computers management, shares management</para>
	</listitem>
	<listitem>
	  <para>lmc-web-mail: mail delivery and mail virtual domains management</para>
	</listitem>
	<listitem>
	  <para>lmc-web-ox: Open-Xchange users management</para>
	</listitem>
	<listitem>
	  <para>lmc-web-proxy: blacklist management for squidGuard</para>
	</listitem>
      </itemizedlist>
      
      <para>
	All this module depends on the lmc-web-base module. They won't work if the lmc-web-base module is not installed.
      </para>
      
    </section>

    <section>

      <title>LMC web modules and LMC Python plugins inter-dependencies</title>

      <para>
	A LMC web modules won't show in the web interface if the corresponding Python plugin is not loaded by the contacted LMC agent.
      </para>
      <para>
	For example, you installed the SAMBA web module, but the SAMBA Python plugin of the LMC agent the web interface is connected to has not been activated.
	This will be detected and automatically the SAMBA management module of the web interface won't be displayed.
      </para>

    </section>
    
    <section>

      <title>Installation of lmc-web-base from source tarball</title>

      <para>
	Get the current lmc-web-base tarball <ulink url="ftp://lds.linbox.org/pub/lds/sources/current/">there</ulink>.
      </para>

      <screen>
	# tar xvzpf lmc-web-base-x.y.z.tar.gz
	# cd lmc-web-base-x.y.z
	# make install HTTPDUSER=apache
      </screen>

      <para>
	For some distribution (e.g. Debian based distro), you must use HTTPDUSER=www-data.
      </para>

      <para>
	The installation process copies files to:	
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    <filename>/usr/local/share/lmc/</filename>: all LMC web interface related files (PHP, images, ...)
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <filename>/etc/lmc/lmc.ini</filename>: LMC web configuration file
	  </para>
	</listitem>
      </itemizedlist>

      <para>
	You can find a full documentation of the lmc.ini file <ulink url="http://lds.linbox.org/content/LMC/conf/en/lmc-web-configuration-file.html">there</ulink>.
      </para>

      <para>
	What you need to change in this file is:
      </para>
      
      <itemizedlist>
	<listitem>
	  <para>
	    « login » and « password »: these are the credentials to connect to the LMC agents on your network (the same credentials as in <filename>/etc/lmc/agent/config.ini</filename>)
	  </para>
	</listitem>
	<listitem>
	  <para>
	    « url » option of the [server_x]: the URL to connect to the LMC agent.
	  </para>
	</listitem>
      </itemizedlist>      

      <para>
	To connect to the LMC web interface using an URL like http://IP/lmc, we add an alias to Apache2:
      </para>

      <screen>
	# cp confs/apache/lmc.conf /etc/httpd/conf.d/lmc.conf
      </screen>

      <para>
	Then don't forget to reload the Apache service.
      </para>
      <para>
	Now you should be able to see the LMC login screen at this URL: http://IP/lmc
      </para>

    </section>

    <section>
      
      <title>Administrator login to the LMC web interface</title>
      
      <para>
	You can always login to the LMC web interface using the login « root » with the LDAP administrator password.
      </para>
      <para>
	After you installed the LMC, this is the only user you can use to log in, because the LDAP directory entry is empty.
      </para>

    </section>
    
    <section>

      <title>Installation of additional LMC web modules</title>

      <para>
	The LMC web tarballs are available <ulink url="ftp://lds.linbox.org/pub/lds/sources/current/">there</ulink>.
      </para>

      <para>
	They are all easy to install. For example:
      </para>

      <screen>
	# tar xvzpf lmc-web-samba-x.y.z.tar.gz
	# cd lmc-web-samba-x.y.z
	# make install
      </screen>

      <para>
	There are no configuration files for all the additional modules.
      </para>
      
    </section>

    <section>

      <title>About firewalling</title>

      <para>
	The LMC web interface communicate with the LMC agent using the TCP port 7080 (default configuration).
	Please check that your firewall configuration doesn't block this port.
      </para>

    </section>
    
    <section>
      
      <title>About SE Linux</title>
      
      <para>
	The LMC web interface opens a socket to communicate with the LMC agent using XML-RPC.
      </para>
      <para>
	On SE Linux enabled systems (e.g. Fedora Core 6), by default Apache can't open socket per policy.
      </para>
      <para>
	So you need to fix or disable your SE linux configuration to make it works.
      </para>
      
    </section>

  </section>
  
  <section id="LDS_SAMBA">

    <title>LDS SAMBA configuration</title>

    <para>
      This section explains how to configure SAMBA with a LDAP directory so that it works with the LMC.
    </para>
    <para>
      Basically, you need to do a classic SAMBA/LDAP setup, SAMBA running as a PDC.
    </para>
    <para>
      A slapd.conf for OpenLDAP and a smb.conf for SAMBA are included into the LMC agent tarball: <filename>contrib/ldap/slapd.conf.samba</filename> and <filename>contrib/samba/smb.conf</filename>. Please use these files as templates for your own configuration.
      If you aren't familiar with SAMBA/LDAP installation, read the <ulink url="http://www.idealx.com/downloads/samba3-ldap-howto.pdf">SAMBA LDAP HOWTO</ulink>. SAMBA LDAP setup is not easy.
    </para>

    <section>
      
      <title>LDAP directory configuration</title>
            
      <para>
	You need to import the SAMBA schema into the LDAP directory.
	The schema file is provided into the LMC agent tarball: <filename>contrib/ldap/samba.schema</filename>.
	But you can also use the schema provided by the SAMBA project.
      </para>
      
    </section>

    <section>

      <title>SAMBA configuration</title>

      <para>
	Stop samba before modifying its configuration:
      </para>
      <screen>
	# /etc/init.d/samba stop
	Or according to your distribution:
	# /etc/init.d/smb stop
      </screen>
      <para>
	In <filename>/etc/samba/smb.conf</filename>, you need to modify the « workgroup », « ldap admin dn » and « ldap suffix » to suit your configuration.
      </para>
      <para>
	SAMBA also needs the credentials of the LDAP manager to write into the LDAP:
      </para>
      <screen>
	# smbpasswd -w LiNBoX
	Setting stored password for "cn=admin,dc=linbox,dc=com" in secrets.tdb	
      </screen>
      <para>
	Now, SAMBA needs to create the SID for your workgroup:
      </para>
      <screen>
	# net getlocalsid LINBOX
	SID for domain LINBOX is: S-1-5-21-128599351-419866736-2079179792	
      </screen>
      <para>
	Use slapcat to check that the SID has really been recorded into the LDAP. You should find an entry like this:
      </para>
      <screen>
	# slapcat | grep sambaDomainName
	dn: sambaDomainName=LINBOX,dc=linbox,dc=com	
	...
      </screen>
      <para>
	Now you can start SAMBA:
      </para>
      <screen>
	# /etc/init.d/samba start
      </screen>

    </section>

    <section>

      <title>LDAP directory for SAMBA init</title>

      <para>
	The LDAP directory needs to be populated so that SAMBA can use it. We use the <command>smbldap-populate</command> command from smbldap-tools.
      </para>
      <para>
	This command populates the LDAP with the OUs (Organizational Unit), users and groups needed by SAMBA.
      </para>
      <para>
	A RPM package of smbldap-tools is available at: http://www.idealx.com/downloads/smbldap-tools-0.9.2-1.noarch.rpm
      </para>

      <para>
	Now the smbldap-tools conf file need to be edited. Put this in <filename>/etc/opt/IDEALX/smbldap-tools/smbldap_bind.conf</filename>:
      </para>
      
      <screen>
	slaveDN="cn=admin,dc=linbox,dc=com"
	slavePw="LiNBoX"
	masterDN="cn=admin,dc=linbox,dc=com"
	masterPw="LiNBoX"
      </screen>

      <para>
	<filename>smbldap_bind.conf</filename> defines how to connect to and write to the LDAP server.
      </para>

      <para>
	Then edit <filename>smbldap.conf</filename> and set those fields:
      </para>
      
      <screen>
	SID="S-1-5-21-128599351-419866736-2079179792"
	sambaDomain="LINBOX"
	ldapTLS="0"
	suffix="dc=linbox,dc=com
	sambaUnixIdPooldn="sambaDomainName=LINBOX,${suffix}"
	#defaultMaxPasswordAge="45"
	userSmbHome=""
	userProfile=""
	userHomeDrive=""
      </screen>
      
      <para>
	Now the directory can be populated. Type:
      </para>

      <screen>
	# /opt/IDEALX/sbin/smbldap-populate -m 512 -a administrator
      </screen>

      <para>
	A user called « administrator » will be created, and a prompt will ask you to give its password. 
	Thanks to the « -m 512 » option, this user will belong to the « Domain Admins » group.
      </para>
      
    </section>

    <section id="NSS_LDAP">

      <title>NSS LDAP configuration</title>

      <para>
	SAMBA needs that the OS use the LDAP directory to get user and group lists.
      </para>
      <para>
	To do this, <filename>/etc/nsswitch.conf</filename> and <filename>/etc/ldap.conf</filename> (<filename>/etc/libnss-ldap.conf</filename> for Debian based distros) should be configured.
      </para>
      <para>
	Your <filename>/etc/nsswitch.conf</filename> should look like this:
      </para>
      <screen>
	passwd:     files ldap
	shadow:     files ldap
	group:      files ldap
	
	hosts:      files dns
	
	bootparams: files
	ethers:     files
	netmasks:   files
	networks:   files
	protocols:  files
	rpc:        files
	services:   files
	netgroup:   files
	publickey:  files
	automount:  files
	aliases:    files
      </screen>
      <para>
	Your <filename>/etc/ldap.conf</filename>:
      </para>
      <screen>
	host 127.0.0.1
	base dc=linbox,dc=com
      </screen>
      
    </section>
    
    <section>

      <title>LMC base plugin configuration for SAMBA</title>

      <para>
	By default, you want your new user to belong to the « Domain Users » group.
      </para>
      <para>
	You just need to set the « defaultUserGroup » option to « Domain Users » in <filename>/etc/lmc/plugins/base.ini</filename>.
      </para>

    </section>

    <section>

      <title>User password expiration</title>

      <para>
	By default, the maximum password age of a SAMBA user is 42 days. Then the user will need to change his/her password.	
      </para>
      <para>
	If you don't want password to expire, type:
      </para>
      <screen>
	# pdbedit -P "maximum password age" -C 0
      </screen>
      <para>
	If you want to check your current password expiration policy:
      </para>
      <screen>
	# pdbedit -P "maximum password age"
      </screen>

    </section>

    <section>

      <title>Giving privileges to SAMBA users and groups</title>

      <para>
	If « enable privileges = yes » is set on your <filename>smb.conf</filename>, you can give privileges to SAMBA users and groups.
      </para>
      <para>
	For example, to give to "Domain Admins" users the right to join a machine to the domain:
      </para>
      
      <screen>
	# net -U administrator rpc rights grant 'DOMAIN\Domain Admins' SeMachineAccountPrivilege
	Password:
	Successfully granted rights.
      </screen>

      <para>
	Notice that you must replace « DOMAIN » by your SAMBA domain name in the command line.
      </para>

      <note>
	<title>Users that can give privileges</title>
	<para>
	  Only users that belong to the "Domain Admins" group can use the <command>net rpc rights grant</command> command to assign privileges.
	</para>
      </note>

    </section>
    
  </section>
  
  <section id="LDS_MAIL">

    <title>LDS mail service configuration</title>

    <section>
      
      <title>LDAP directory configuration</title>
            
      <para>
	You need to import our mail schema into the LDAP directory.
	The schema file is provided into the LMC agent tarball: <filename>contrib/ldap/mail.schema</filename>.
      </para>
      <para>
	Once this schema is imported, you will be able to manage mail delivery attributes thanks to the LMC.
      </para>
      
    </section>
   
    <section>

      <title>Postfix/LDAP configuration</title>

      <para>
	Example Postfix configuration files are included into the LMC agent tarball: <filename>contrib/postfix/</filename>.
      </para>
      <para>
	We provide two kinds of configuration:
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    no-virtual-domain: the mail domain is fixed in the « mydestination » option in main.cf
	  </para>
	</listitem>
	<listitem>
	  <para>
	    with-virtual-domains: mails are delivered to all mail domains created thanks to the LMC
	  </para>
	</listitem>
      </itemizedlist>

    </section>

    <section>
      
      <title>NSS LDAP configuration</title>

      <para>
	NSS LDAP configuration is needed to deliver mails with the right UIDs/GIDs.
      </para>
      <para>
	See <xref linkend="NSS_LDAP"/>.
      </para>
      
    </section>    
    
  </section>
  

</article>
